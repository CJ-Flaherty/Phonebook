{"version":3,"sources":["components/SubmissionForm.js","components/SearchForm.js","components/PersonDisplay.js","services/PersonService.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["SumbissionForm","props","react_default","a","createElement","onSubmit","name","name1","value","value1","onChange","onChange1","name2","value2","onChange2","type","SearchForm","console","log","PersonDisplay","className","number","onClick","toggleDelete","PersonService","axios","get","newObject","post","id","url","concat","delete","Notification","_ref","message","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","searchTerm","setSearchTerm","_useState9","_useState10","search","setSearch","_useState11","_useState12","erorrMessage","setErrorMessage","useEffect","personService","then","response","data","personsToShow","filter","person","str","includes","checkSearch","components_Notification","SubmissionForm","event","preventDefault","personObj","map","setTimeout","target","components_SearchForm","components_PersonDisplay","key","find","p","window","confirm","toggleDeleteOf","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd1a391c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n const SumbissionForm = (props) => {\r\n     //console.log('props :', props);\r\n     return(\r\n        <form onSubmit = {props.onSubmit}>\r\n        <div>\r\n      \r\n          name: <input \r\n            name = {props.name1}\r\n            value = {props.value1}\r\n            onChange = {props.onChange1}\r\n        />\r\n        </div>\r\n        <div>\r\n          number: <input\r\n          name = {props.name2}\r\n          value = {props.value2}\r\n          onChange = {props.onChange2}\r\n          />\r\n        </div>\r\n    \r\n          <button type=\"submit\">add</button>\r\n      </form>\r\n     )\r\n }\r\n\r\n\r\n export default SumbissionForm","import React from 'react'\r\n\r\nconst SearchForm = (props) => {\r\nconsole.log('props :', props);\r\nreturn(\r\n   <form onSubmit = {props.onSubmit}>\r\n   <div>\r\n \r\n     name: <input \r\n       name = {props.name}\r\n       value = {props.value}\r\n       onChange = {props.onChange}\r\n   />\r\n   </div>\r\n\r\n     <button type=\"submit\">Search</button>\r\n </form>\r\n)\r\n}\r\n\r\nexport default SearchForm","import React from 'react'\r\n\r\nconst PersonDisplay = (props) => {\r\n  const msg = 'Delete'\r\n  return (\r\n    <div> \r\n      <li className = 'person'>\r\n      Name: {props.name} \r\n      Number: {props.number}\r\n      <button onClick= {props.toggleDelete}>{msg}</button>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonDisplay","import axios from 'axios'\r\nvar baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deletePerson = (id ) => {\r\n  var url = baseUrl.concat('/', id)\r\n\r\n  return axios.delete(url)\r\n}\r\nexport default { \r\n  getAll, \r\n  create,  \r\n  deletePerson\r\n}","import React from 'react'\r\nconst Notification = ( {message} ) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport SumbissionForm from './components/SubmissionForm'\nimport SearchForm from './components/SearchForm'\nimport PersonDisplay from './components/PersonDisplay'\nimport personService from './services/PersonService'\nimport './index.css'\nimport Notification from './components/Notification.js'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [search, setSearch] = useState(false)\n  const [erorrMessage, setErrorMessage] = useState(null)\n\n\n\n  \n  useEffect( () => {\n    personService\n    .getAll()\n    .then( response => {\n      setPersons(response.data)\n    })\n  }, [])\n\n\n\n  const checkSearch = (str, searchTerm) =>{\n    return (str.includes(searchTerm))\n  }\n\n  \n  const personsToShow = (search === false)\n    ? persons\n    : persons.filter(person => checkSearch(person.name, searchTerm))\n  \n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObj = {\n      name: newName,\n      number: newNumber\n    }\n    if(persons.map(person => person.name).includes(personObj.name)){\n      setErrorMessage(`${personObj.name} is already in the phonebook`);\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n    else{\n      console.log('here :');\n      personService\n        .create(personObj)\n        .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('') \n        setNewNumber('')\n        setErrorMessage(`${personObj.name} added to phonebook`);\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })}\n\n  }\n\n  const handleNameChange = (event) => {\n    console.log('event.target:', event.target);\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log('event.target:', event.target);\n    setNewNumber(event.target.value)\n  }\n  \n  const handleSearchTermChange = (event) => {\n    setSearch(false)\n    setSearchTerm(event.target.value)\n  }\n  \n  const handleSearchChange = (event) => {\n    event.preventDefault()\n    setSearch(!search)\n  }\n\n  const toggleDeleteOf = id => {\n    const person = persons.find(p => p.id ===id)\n  \n    if (window.confirm(`Do you really want to delete ${person.name}`)){\n    personService\n    .deletePerson(id)\n    .then( response => {\n      setPersons(persons.filter(p => p.id !== id))\n      \n    })\n    setErrorMessage(`${person.name} deleted from phonebook`)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n    \n    }\n  \n  }\n\n  const Persons = () => {\n\n    return ( personsToShow.map(person => \n      \n      <PersonDisplay \n          key = {person.name}\n          name= {person.name} \n          number= {person.number}\n          toggleDelete = {() => toggleDeleteOf(person.id)}\n          \n      />)\n\n    )\n  }\n  \n\n\n\n    return(\n\n\n\n    <div>\n      <h2>Phonebook</h2>\n     \n      <Notification message = {erorrMessage} />\n\n      <SumbissionForm \n      onSubmit = {addPerson} name1 = 'name' value1 = {newName} onChange1 = {handleNameChange}\n       name2 = 'number' value2 = {newNumber} onChange2 = {handleNumberChange} \n      />\n\n\n\n      \n        <SearchForm\n         onSubmit = {handleSearchChange} name = 'search' value = {searchTerm} onChange = {handleSearchTermChange}\n        />\n\n     \n      \n      \n      <h2>Numbers</h2>\n      {console.log('persons2', personsToShow)}\n\n      <Persons personsToShow = {personsToShow} />\n    </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}